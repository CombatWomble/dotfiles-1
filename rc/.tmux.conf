set -g default-terminal "screen-256color"
set -g history-limit 10000
set -sg escape-time 0 #500

# airline
theme="/home/ross/dotfiles/themes/tmuxline.conf"
if-shell "test -f $theme" "source $theme"

# use vi mode
setw -g mode-keys vi

# prefix
unbind C-b
set -g prefix C-Space
# nested prefix
bind C-Space send-prefix
bind Space send-prefix

# next layout (since I stole Space)
bind u next-layout

# switch sessions (like buffers)
bind b choose-tree

# open new
bind B new-session
bind W new-window

# 0 is far, far away
set -g base-index 1
set -g pane-base-index 1

# force a reload of the config file
bind r source-file ~/.tmux.conf\; display "Config reloaded."

# same command prompt alias as vim
bind \; command-prompt

# previous pane (since I stole ;)
bind \ last-pane

# match <prefix-n> (`next-window`)
bind N previous-window
bind C-u previous-window
bind C-d next-window

# splitting
bind h split-window -h -c "#{pane_current_path}"\; swap-pane -U
bind l split-window -h -c "#{pane_current_path}"
bind j split-window -v -c "#{pane_current_path}"
bind k split-window -v -c "#{pane_current_path}"\; swap-pane -U

# swapping
bind -r H swap-pane -U
bind -r L swap-pane -D
bind -r J swap-pane -D
bind -r K swap-pane -U

# resizing
bind -r C-h resize-pane -L 10
bind -r C-l resize-pane -R 10
bind -r C-j resize-pane -D 10
bind -r C-k resize-pane -U 10

# navigation
# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command} #{pane_title}' | grep -iqE '(^vim | - VIM$)' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command} #{pane_title}' | grep -iqE '(^vim | - VIM$)' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command} #{pane_title}' | grep -iqE '(^vim | - VIM$)' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command} #{pane_title}' | grep -iqE '(^vim | - VIM$)' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command} #{pane_title}' | grep -iqE '(^vim | - VIM$)' && tmux send-keys 'C-\\') || tmux select-pane -l"

# bind -n M-h run "(tmux display-message -p '#{pane_current_command} #{pane_title}' | grep -iqE '(^vim | - VIM$)' && tmux send-keys C-h) || tmux select-pane -L"
# bind -n M-j run "(tmux display-message -p '#{pane_current_command} #{pane_title}' | grep -iqE '(^vim | - VIM$)' && tmux send-keys C-j) || tmux select-pane -D"
# bind -n M-k run "(tmux display-message -p '#{pane_current_command} #{pane_title}' | grep -iqE '(^vim | - VIM$)' && tmux send-keys C-k) || tmux select-pane -U"
# bind -n M-l run "(tmux display-message -p '#{pane_current_command} #{pane_title}' | grep -iqE '(^vim | - VIM$)' && tmux send-keys C-l) || tmux select-pane -R"
# bind -n M-\ run "(tmux display-message -p '#{pane_current_command} #{pane_title}' | grep -iqE '(^vim | - VIM$)' && tmux send-keys 'C-\\') || tmux select-pane -l"

# copy pasta
bind v copy-mode
bind c copy-mode
bind p paste-buffer
bind-key -t vi-copy y copy-pipe "xsel -ib"
bind-key -t vi-copy enter copy-pipe "xsel -ib"
bind-key -t vi-copy v begin-selection

# directly expose pane titles
set -g set-titles on
set -g set-titles-string "#T"

# urgency hints
set-option -g bell-action any
set-option -g bell-on-alert on

# only resize shared windows
setw -g aggressive-resize on

# not being able to move whole words is annoying
# set-window-option -g xterm-keys on

# for those with mice infestations
set -g mode-mouse on
set -g mouse-utf8 off
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# Toggle mouse on with ^U m
bind M \
	set -g mode-mouse on \;\
	set -g mouse-resize-pane on \;\
	set -g mouse-select-pane on \;\
	set -g mouse-select-window on \;\
	display 'Mouse: ON'

# Toggle mouse off with ^U M
bind m \
	set -g mode-mouse off \;\
	set -g mouse-resize-pane off \;\
	set -g mouse-select-pane off \;\
	set -g mouse-select-window off \;\
	display 'Mouse: OFF'
