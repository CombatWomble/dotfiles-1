[user]
	name = Ross Hadden
	email = rosshadden@gmail.com
[core]
	editor = vim
	excludesfile = /home/ross/dotfiles/git/.gitignore-global
[merge]
	tool = diffconflicts
[mergetool "diffconflicts"]
	cmd = diffconflicts gvim $BASE $LOCAL $REMOTE $MERGED
	trustExitCode = true
	keepBackup = false
[mergetool "subl"]
	cmd = subl -w $MERGED
	trustExitCode = false
	keepBackup = false
[color]
	ui = true
	branch = auto
	diff = auto
	status = auto
[color "branch"]
	current = red reverse
	local = blue
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[alias]
	# natives
	diff = diff --word-diff
	grep = grep -Ii

	# dynamic
	in = "!sh -c 'git pull ${1-origin} ${2-$(git pwd)}' -"
	out = "!sh -c 'git push ${1-origin} ${2-$(git pwd)}' -"
	sync = "!git in && git out"

	# unix metaphor
	ls = ls-files
	cat = log -u --word-diff
	pwd = rev-parse --abbrev-ref HEAD
	find = "!git ls-files | grep -i"

	# logging
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative -n64
	lgs = "!git lg --stat"
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat -n32
	lawg = log --reverse --author=Ross --no-merges --format=format:\"%s%n    %b\"
	lawg-new = "!sh -c 'git --no-pager log --reverse --author=Ross --no-merges --format=format:\"%s%n    %b\" origin/$(git pwd)..$(git pwd)' -"
	# new = "!sh -c 'git log $1@{1}..$1@{0} "$@"' -"
	new = "!git lg HEAD..FETCH_HEAD"
	news = "!git lgs HEAD..FETCH_HEAD"

	# utility
	sb = !ls .git/refs/remotes/*/$(git pwd) | cut -d/ -f4,5 | xargs git show-branch $(git pwd)
	track = update-index --no-assume-unchanged
	untrack = update-index --assume-unchanged

	# shortcuts
	df = diff --word-diff
	staged = diff --staged --word-diff
	unstage = reset HEAD --
	scrap = "!sh -c 'git reset --hard ${1-HEAD}' -"
	amend = commit --amend
	g = grep --break --heading --line-number
	s = status -sb

	# stash
	sl = stash list
	ss = stash save
	sa = "!sh -c 'git stash apply stash@{$1}' -"
	sp = "!sh -c 'git stash pop stash@{$1}' -"
	sd = "!sh -c 'git stash drop stash@{$1}' -"

	# alias
	a = add
	b = branch
	c = commit
	f = fetch
	i = in
	o = out
	r = remote
	t = tag
	m = merge
	ch = checkout
	co = checkout
	rb = rebase
	sh = show
[remote "origin"]
	#fetch = +refs/pull/*/head:refs/remotes/origin/pr/*
[grep]
	extendRegexp = true
	lineNumber = true
[push]
	default = simple
