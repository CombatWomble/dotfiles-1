################
# VARIABLES
################
	set $super Mod4
	set $alt Mod1

	set $0 temp
	set $1 web
	set $2 dev
	set $3 sync
	set $4 hack
	set $5 files
	set $6 media
	set $7 games
	set $8 8
	set $9 run
	set $10 chat
	set $11 11
	set $12 12

	set $ws0 0| temp
	set $ws1 1| web
	set $ws2 2| dev
	set $ws3 3| sync
	set $ws4 4| hack
	set $ws5 5| files
	set $ws6 6| media
	set $ws7 7| games
	set $ws8 8
	set $ws9 9| run
	set $ws10 10| chat
	set $ws11 11
	set $ws12 12

	# return to the default mode
	set $return mode "default"

	# default apps
	set $chooseCommand rofi -show run
	set $chooseWindow rofi -show window
	set $chooseApp j4-dmenu-desktop --dmenu="rofi -dmenu -p launch:"
	set $terminal i3-sensible-terminal
	set $tmux i3-sensible-terminal -e tmux -2
	set $tmuxAttach i3-sensible-terminal -e tmux -2 new-session -A -s
	set $locker i3lock --color=012345

	# UI
	set $borderWidth 8

	# paths
	set $wallpaperPath ~/Dropbox/media/images/wallpaper


################
# OPTIONS
################
	# Font for window titles. Will also be used by the bar unless a different font
	# is used in the bar {} block below.
	font pango:Ubuntu Mono 12

	workspace_auto_back_and_forth no

	# Use Mouse+$super to drag floating windows to their wanted position
	floating_modifier $super

	# Don't follow mouse focus
	focus_follows_mouse no

	# window borders
	new_window normal $borderWidth
	new_float pixel $borderWidth

	mouse_warping none


################
# BINDS
################
	# close focused window
	bindsym $super+c kill
	# TODO: [C] kill with fire

	# change focus between tiling / floating windows
	bindsym $super+Tab focus mode_toggle

	# open terminal
	bindsym $super+t exec $tmux
	bindsym $super+Shift+t exec $terminal

	# open runner
	bindsym $super+r exec $chooseCommand

	# open window finder
	bindsym $super+w exec $chooseWindow

	# open launcher
	bindsym $super+o exec --no-startup-id $chooseApp

	# lock screen
	bindsym $super+Delete exec $locker

	# change focus
	bindsym $super+h focus left
	bindsym $super+j focus down
	bindsym $super+k focus up
	bindsym $super+l focus right

	# move focused window
	bindsym $super+Shift+h move left
	bindsym $super+Shift+j move down
	bindsym $super+Shift+k move up
	bindsym $super+Shift+l move right

	# focus left/right output
	bindsym $super+u focus output left
	bindsym $super+d focus output right

	# move workspace to left/right output
	bindsym $super+Shift+u move workspace to output left
	bindsym $super+Shift+d move workspace to output right

	# focus previous/next workspace
	bindsym $super+n workspace next
	bindsym $super+p workspace prev

	# move window to previous/next workspace
	bindsym $super+Shift+b move window to workspace prev
	bindsym $super+Shift+f move window to workspace next

	# back to last workspace
	bindsym $super+Escape workspace back_and_forth
	bindsym $super+Shift+Escape move container to workspace back_and_forth; workspace back_and_forth

	# split in horizontal orientation
	bindsym $super+s split horizontal

	# split in vertical orientation
	bindsym $super+minus split vertical

	# switch to workspace
	bindsym $super+1 workspace $ws1
	bindsym $super+2 workspace $ws2
	bindsym $super+3 workspace $ws3
	bindsym $super+4 workspace $ws4
	bindsym $super+5 workspace $ws5
	bindsym $super+6 workspace $ws6
	bindsym $super+7 workspace $ws7
	bindsym $super+8 workspace $ws8
	bindsym $super+9 workspace $ws9
	bindsym $super+0 workspace $ws10
	bindsym $super+bracketleft workspace $ws11
	bindsym $super+bracketright workspace $ws12
	bindsym $super+grave workspace $ws0

	# move focused container to workspace
	bindsym $super+Shift+1 move container to workspace $ws1
	bindsym $super+Shift+2 move container to workspace $ws2
	bindsym $super+Shift+3 move container to workspace $ws3
	bindsym $super+Shift+4 move container to workspace $ws4
	bindsym $super+Shift+5 move container to workspace $ws5
	bindsym $super+Shift+6 move container to workspace $ws6
	bindsym $super+Shift+7 move container to workspace $ws7
	bindsym $super+Shift+8 move container to workspace $ws8
	bindsym $super+Shift+9 move container to workspace $ws9
	bindsym $super+Shift+0 move container to workspace $ws10
	bindsym $super+Shift+bracketleft move container to workspace $ws11
	bindsym $super+Shift+bracketright move container to workspace $ws12
	bindsym $super+Shift+grave move container to workspace $ws0

	# focus the parent/child container
	bindsym $super+z focus parent
	bindsym $super+Shift+z focus child

	# show scratchpad
	bindsym $super+slash scratchpad show
	# move the currently focused window to the scratchpad
	bindsym $super+Shift+slash move scratchpad

	# cycle through border styles
	bindsym $super+backslash border toggle

	# modes
	bindsym $super+space mode "PREFIX"
	bindsym $super+m mode "MARK"
	bindsym $super+apostrophe mode "GOTO"
	# TODO: [y] yank
	# TODO: [p] paste
	# TODO: [q], [@] macros
	# TODO: [f] focus (or maybe [/])


################
# MEDIA
################
	# volume
	bindsym XF86AudioRaiseVolume exec "pulseaudio-ctl up"
	bindsym XF86AudioLowerVolume exec "pulseaudio-ctl down"
	bindsym XF86AudioMute exec "pulseaudio-ctl mute"
	# playback
	bindsym XF86AudioPlay exec "playerctl play-pause"
	bindsym XF86AudioNext exec "playerctl next"
	bindsym XF86AudioPrev exec "playerctl previous"

	# screenshots
	bindsym Print exec "~/bin/screenshot"
	bindsym $alt+Print exec "~/bin/screenshot window"
	bindsym Control+Shift+Print exec "~/bin/screenshot select"


################
# MODES
################
	mode "PREFIX" {
		bindsym l mode "LAYOUT"
		bindsym b mode "BUFFER"
		bindsym m mode "MOUSE"
		bindsym r mode "RESIZE"
		bindsym i mode "I3"
		bindsym t mode "TMUX"
		bindsym a mode "APPS"

		bindsym Return $return
		bindsym Escape $return
	}

	mode "BUFFER" {
		bindsym c kill; $return

		bindsym Return $return
		bindsym Escape $return
	}

	mode "MARK" {
		# by name
			bindsym Return exec i3-input -F 'mark %s' -P 'Mark name: '; $return

		# by number
			bindsym grave mark mark-0; $return
			bindsym 1 mark mark-1; $return
			bindsym 2 mark mark-2; $return
			bindsym 3 mark mark-3; $return
			bindsym 4 mark mark-4; $return
			bindsym 5 mark mark-5; $return
			bindsym 6 mark mark-6; $return
			bindsym 7 mark mark-7; $return
			bindsym 8 mark mark-8; $return
			bindsym 9 mark mark-9; $return
			bindsym 0 mark mark-10; $return
			bindsym bracketleft mark mark-11; $return
			bindsym bracketright mark mark-12; $return

		# by letter
			bindsym a mark mark-a; $return
			bindsym b mark mark-b; $return
			bindsym c mark mark-c; $return
			bindsym d mark mark-d; $return
			bindsym e mark mark-e; $return
			bindsym f mark mark-f; $return
			bindsym g mark mark-g; $return
			bindsym h mark mark-h; $return
			bindsym i mark mark-i; $return
			bindsym j mark mark-j; $return
			bindsym k mark mark-k; $return
			bindsym l mark mark-l; $return
			bindsym m mark mark-m; $return
			bindsym n mark mark-n; $return
			bindsym o mark mark-o; $return
			bindsym p mark mark-p; $return
			bindsym q mark mark-q; $return
			bindsym r mark mark-r; $return
			bindsym s mark mark-s; $return
			bindsym t mark mark-t; $return
			bindsym u mark mark-u; $return
			bindsym v mark mark-v; $return
			bindsym w mark mark-w; $return
			bindsym x mark mark-x; $return
			bindsym y mark mark-y; $return
			bindsym z mark mark-z; $return

		# exit
			bindsym Return $return
			bindsym Escape $return
	}

	mode "GOTO" {
		# by name
			bindsym Return exec i3-input -F '[con_mark=%s] focus' -P 'Go to mark: '; $return

		# by number
			bindsym grave [con_mark="mark-0"] focus; $return
			bindsym 1 [con_mark="mark-1"] focus; $return
			bindsym 2 [con_mark="mark-2"] focus; $return
			bindsym 3 [con_mark="mark-3"] focus; $return
			bindsym 4 [con_mark="mark-4"] focus; $return
			bindsym 5 [con_mark="mark-5"] focus; $return
			bindsym 6 [con_mark="mark-6"] focus; $return
			bindsym 7 [con_mark="mark-7"] focus; $return
			bindsym 8 [con_mark="mark-8"] focus; $return
			bindsym 9 [con_mark="mark-9"] focus; $return
			bindsym 0 [con_mark="mark-10"] focus; $return
			bindsym bracketleft [con_mark="mark-11"] focus; $return
			bindsym bracketright [con_mark="mark-12"] focus; $return

		# by letter
			bindsym a [con_mark="mark-a"] focus; $return
			bindsym b [con_mark="mark-b"] focus; $return
			# bindsym c [con_mark="mark-c"] focus; $return
			bindsym d [con_mark="mark-d"] focus; $return
			bindsym e [con_mark="mark-e"] focus; $return
			# bindsym f [con_mark="mark-f"] focus; $return
			bindsym g [con_mark="mark-g"] focus; $return
			bindsym h [con_mark="mark-h"] focus; $return
			bindsym i [con_mark="mark-i"] focus; $return
			bindsym j [con_mark="mark-j"] focus; $return
			bindsym k [con_mark="mark-k"] focus; $return
			bindsym l [con_mark="mark-l"] focus; $return
			bindsym m [con_mark="mark-m"] focus; $return
			bindsym n [con_mark="mark-n"] focus; $return
			bindsym o [con_mark="mark-o"] focus; $return
			bindsym p [con_mark="mark-p"] focus; $return
			bindsym q [con_mark="mark-q"] focus; $return
			bindsym r [con_mark="mark-r"] focus; $return
			bindsym s [con_mark="mark-s"] focus; $return
			bindsym t [con_mark="mark-t"] focus; $return
			bindsym u [con_mark="mark-u"] focus; $return
			bindsym v [con_mark="mark-v"] focus; $return
			# bindsym w [con_mark="mark-w"] focus; $return
			bindsym x [con_mark="mark-x"] focus; $return
			bindsym y [con_mark="mark-y"] focus; $return
			bindsym z [con_mark="mark-z"] focus; $return

		# by symbol
			bindsym apostrophe [urgent=latest] focus; $return

		# by app
			bindsym c [class="(?i)terminal" title="finch"] focus; $return
			bindsym f [class="(?i)terminal" title="vifm"] focus; $return
			bindsym w [class="(?i)chrome"] focus; $return

		bindsym Return $return
		bindsym Escape $return
	}

	mode "I3" {
		# reload the configuration file
		bindsym space reload; $return
		# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
		bindsym r restart; $return
		# exit i3 (logs you out of your X session)
		bindsym q exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"; $return
		# lock screen
		bindsym l exec $locker

		bindsym Return $return
		bindsym Escape $return
	}

	mode "TMUX" {
		# by name
			bindsym Return exec i3-input -P 'Session name: ' -F 'exec $tmuxAttach %s'; $return

		# presets
			# TODO: make these dynamic from the workspace name
			bindsym grave        workspace $ws0;  exec $tmuxAttach $0;  $return
			bindsym 1            workspace $ws1;  exec $tmuxAttach $1;  $return
			bindsym 2            workspace $ws2;  exec $tmuxAttach $2;  $return
			bindsym 3            workspace $ws3;  exec $tmuxAttach $3;  $return
			bindsym 4            workspace $ws4;  exec $tmuxAttach $4;  $return
			bindsym 5            workspace $ws5;  exec $tmuxAttach $5 'vifm';  $return
			bindsym 6            workspace $ws6;  exec $tmuxAttach $6;  $return
			bindsym 7            workspace $ws7;  exec $tmuxAttach $7;  $return
			bindsym 8            workspace $ws8;  exec $tmuxAttach $8;  $return
			bindsym 9            workspace $ws9;  exec $tmuxAttach $9;  $return
			bindsym 0            workspace $ws10; exec $tmuxAttach $10 'finch'; $return
			bindsym bracketleft  workspace $ws11; exec $tmuxAttach $11; $return
			bindsym bracketright workspace $ws12; exec $tmuxAttach $12; $return

		# TODO: open preset for the current workspace

		bindsym Return $return
		bindsym Escape $return
	}

	mode "RESIZE" {
		# shrink the window’s width
		bindsym h resize shrink width 10 px or 10 ppt
		# grow the window’s width
		bindsym j resize grow height 10 px or 10 ppt
		# shrink the window’s height
		bindsym k resize shrink height 10 px or 10 ppt
		# grow the window’s height
		bindsym l resize grow width 10 px or 10 ppt

		bindsym Return $return
		bindsym Escape $return
	}

	mode "LAYOUT" {
		bindsym grave layout default; $return
		bindsym 1 layout tabbed; $return
		bindsym 2 layout stacking; $return
		bindsym 3 layout splitv; $return
		bindsym 4 layout splith; $return

		# toggle [stacking, tabbed, splith, splitv]
		bindsym a layout toggle all; $return
		# toggle [splith, splitv]
		bindsym s layout toggle split; $return
		# toggle [stacking, tabbed, split]
		bindsym t layout toggle; $return
		# toggle fullscreen
		bindsym f fullscreen; $return
		bindsym Shift+f fullscreen global; $return
		# toggle [floating, tiled]
		bindsym space floating toggle; $return

		bindsym Return $return
		bindsym Escape $return
	}

	mode "MOUSE" {
		# movement
			# slow
			bindsym $alt+h exec $(xdotool mousemove_relative -- -4  0)
			bindsym $alt+l exec $(xdotool mousemove_relative --  4  0)
			bindsym $alt+j exec $(xdotool mousemove_relative --  0  4)
			bindsym $alt+k exec $(xdotool mousemove_relative --  0 -4)
			# normal
			bindsym h exec $(xdotool mousemove_relative -- -16   0)
			bindsym l exec $(xdotool mousemove_relative --  16   0)
			bindsym j exec $(xdotool mousemove_relative --   0  16)
			bindsym k exec $(xdotool mousemove_relative --   0 -16)
			# fast
			bindsym Shift+h exec $(xdotool mousemove_relative -- -128    0)
			bindsym Shift+l exec $(xdotool mousemove_relative --  128    0)
			bindsym Shift+j exec $(xdotool mousemove_relative --    0  128)
			bindsym Shift+k exec $(xdotool mousemove_relative --    0 -128)
			# turbo
			bindsym Control+h exec $(xdotool mousemove_relative -- -512    0)
			bindsym Control+l exec $(xdotool mousemove_relative --  512    0)
			bindsym Control+j exec $(xdotool mousemove_relative --    0  512)
			bindsym Control+k exec $(xdotool mousemove_relative --    0 -512)

		# buttons
			# left
			bindsym space exec $(xdotool click 1)
			# middle
			bindsym m exec $(xdotool click 2)
			# right
			bindsym Shift+space exec $(xdotool click 3)
			# wheel up
			bindsym b exec $(xdotool click 4)
			# wheel down
			bindsym f exec $(xdotool click 5)

		bindsym Return $return
		bindsym Escape $return
	}

	mode "APPS" {
		# copyq
		bindsym c exec copyq toggle; $return
		# zeal
		# TODO: figure out a way to toggle visibility, not just launch
		bindsym z exec zeal; $return

		bindsym Return $return
		bindsym Escape $return
	}


################
# THEME
################
	# class                 border  bg      text    indicator
	client.focused          #00afff #0087ff #ffffff #dddddd
	client.focused_inactive #666666 #151515 #ffffff #292d2e
	client.unfocused        #666666 #151515 #ffffff #292d2e
	client.urgent           #2f343a #900000 #ffffff #900000


################
# STATUSBAR
################
	# Start i3bar to display a workspace bar (plus the system information i3status
	# finds out, if available)
	bar {
		status_command i3status
		position top
		workspace_buttons yes
		mode dock
		tray_output primary

		font pango:FontAwesome 12

		colors {
			background #151515
			statusline #ffffff
			separator #875fd7

			# class            border  bg      text
			focused_workspace  #875fd7 #5f00af #ffffff
			inactive_workspace #151515 #151515 #ffffff
			active_workspace   #5f00af #875fd7 #ffffff
			urgent_workspace   #ffaf00 #ff5f00 #ffffff
		}
	}


################
# WORKSPACES
################
	# TODO: handle the fact that different computers have different xrandr setups...


################
# APPS
################
	# dialogs
	for_window [window_role="pop-up"] floating enable, move absolute center

	# floating
	for_window [class="^Copyq|zeal|Gpick$"] floating enable
	for_window [title="Qalculate!"] floating enable

	# chrome
	# assign [class="^Google-chrome.*$"] → $ws1

	# nuvola
	assign [class="nuvolaplayer"] → $ws6
	for_window [class="nuvolaplayer"] move container to workspace $ws6

	# finch
	assign [title="^finch$"] → $ws10
	for_window [title="^finch$"] move container to workspace $ws10


################
# STARTUP
################
	# wallpaper
	exec --no-startup-id feh --recursive --randomize --bg-scale $wallpaperPath &

	# autolock
	exec --no-startup-id xautolock -time 10 -locker $locker &
