" Disable vi-compatibility
set nocompatible

""""""""""""""""
" NEOBUNDLE
""""""""""""""""

if has ('vim_starting')
	set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

call neobundle#begin(expand('~/.vim/bundle/'))

" PLUGINS
	" Let NeoBundle manage NeoBundle
	NeoBundleFetch 'Shougo/neobundle.vim'

	NeoBundle 'SearchComplete'

	NeoBundle 'tpope/vim-surround'
	NeoBundle 'tpope/vim-commentary'
	NeoBundle 'tpope/vim-unimpaired'
	NeoBundle 'tpope/vim-repeat'
	NeoBundle 'tpope/vim-sensible'
	NeoBundle 'tpope/vim-fugitive'
	NeoBundle 'kien/ctrlp.vim'
	NeoBundle 'scrooloose/nerdtree'
	NeoBundle 'jistr/vim-nerdtree-tabs'
	NeoBundle 'Lokaltog/vim-easymotion'
	NeoBundle 'ervandew/supertab'
	NeoBundle 'sjl/gundo.vim'
" /PLUGINS

call neobundle#end()

" Prompt to install any newly added bundles
NeoBundleCheck


""""""""""""""""
" SETTINGS
""""""""""""""""

" take me to your <Leader>
let mapleader=","
" line numbers
set number
set smartcase
set hlsearch
set cursorline
" spell checking (toggled with `cos`)
" set spell
" simple mouse support
set mouse=a
" paste without comments messing everything up
set pastetoggle=<F5>
" Let arrow keys pass \n
set whichwrap=b,s,<,>,[,]


""""""""""""""""
" MAPPINGS
""""""""""""""""

" :w!! => Get sudo when it has been forgotten.
cmap w!! w !sudo tee > /dev/null %

" C-s => save [:update]
noremap		<silent> <C-S>		:update<CR>
vnoremap	<silent> <C-S>		<C-C>:update<CR>
inoremap	<silent> <C-S>		<Esc>:update<CR>

" C-q => (force) quit [:quit!]
noremap		<silent> <C-Q>		:quit!<CR>
vnoremap	<silent> <C-Q>		<C-C>:quit!<CR>
inoremap	<silent> <C-Q>		<Esc>:quit!<CR>

" C-x => save and quit [:wq]
noremap		<silent> <C-X>		:wq<CR>
vnoremap	<silent> <C-X>		<C-C>:wq<CR>
inoremap	<silent> <C-X>		<Esc>:wq<CR>

" U => redo [:redo]
noremap		U			<C-r>


""""""""""""""""
" THEME
""""""""""""""""

set t_Co=256
colorscheme molokai


""""""""""""""""
" MISC
""""""""""""""""

if has("autocmd")
	filetype plugin on

	" Reload vimrc when edited
	augroup watchconfig
		au!
		autocmd! BufWritePost vimrc source ~/.vim/vimrc
	augroup END

	" Preserve cursor position
	au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif

	" syntax highlighting

	" files without detected syntax
	au BufNewFile,BufRead * if &syntax == '' | set syntax=bash | endif
	au BufNewFile,BufRead * if &filetype == '' | set filetype=bash | endif
endif


""""""""""""""""
" PLUGINS
""""""""""""""""

" SETTINGS
	" ctrlp: follow symlinks
	let g:ctrlp_show_hidden = 1
	
	" NERDTree: show hidden files
	let g:NERDTreeShowHidden = 1

	" Open NERDTree on console vim startup
	let g:nerdtree_tabs_open_on_console_startup = 1

" MAPPINGS
	" L-n => toggle NERDTreeTabs
	map		<Leader>n		<plug>NERDTreeTabsToggle<CR>

	" L-u => toggle gundu menu [:GunduToggle]
	map		<Leader>u		:GundoToggle<CR>

