#!/usr/bin/env bash

################################
# Streams music to vlc.
#
# Dependencies:
# - [gmusicproxy](https://github.com/diraimondo/gmusicproxy)
################################

# urlencode <string>
urlencode() {
	old_lc_collate=$LC_COLLATE
	LC_COLLATE=C

	local length="${#1}"
	for (( i = 0; i < length; i++ )); do
		local c="${1:i:1}"
		case $c in
			[a-zA-Z0-9.~_-]) printf "%s" "$c" ;;
			*) printf '%%%02X' "'$c" ;;
		esac
	done

	LC_COLLATE=$old_lc_collate
}

muse() {
	local artist
	local type
	local query="get_by_search"

	spec=":a:n:q:t:"
	while getopts $spec opt; do
		case "$opt" in
			a) artist="$OPTARG" ;;
			n) numTracks="$OPTARG" ;;
			q) query="$OPTARG" ;;
			t) type="$OPTARG" ;;
			:) error "Option '-$OPTARG' requires an argument" ;;
			*) error "Invalid option: -$OPTARG" ;;
		esac
	done
	shift "$((OPTIND-1))"

	if [[ "$query" == "radio" ]]; then
		query="get_new_station_by_search"
		type="${type:-artist}"
	fi

	type="${type:-matches}"

	local title="$1"
	local api="http://localhost:9999"
	local uri="${api}/${query}?type=${type}&exact=no"

	if [[ "$title" != "" ]]; then
		uri="${uri}&title=$(urlencode "$title")"
	fi

	if [[ "$artist" != "" ]]; then
		uri="${uri}&artist=$(urlencode "$artist")"
	fi

	if [[ "$numTracks" != "" ]]; then
		uri="${uri}&num_tracks=${numTracks}"
	fi

	killall vlc >/dev/null 2>&1
	curl -s "$uri" | vlc - >/dev/null 2>&1 &
}

muse "$@"
